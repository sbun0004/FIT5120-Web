# -*- coding: utf-8 -*-
"""on_boarding_visualisation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19LB7vhldd7CCDVvlXWBdyWoVuxUpkmWz
"""

import pandas as pd
#visualisation tools
import matplotlib
import matplotlib.pyplot as plt
import seaborn as sns
import plotly
import plotly.express as px

df = pd.read_csv('waste_data.csv')
df.head()

df.isnull().sum()

df = df.dropna(how='all')
df.head()

df['Year'] = df['Reference Year'].astype(str).str[:4]
df['Year'].astype(int)

"""##First visualisation"""

recyclecollected = pd.DataFrame(df.groupby(by=['Year'])['Recycling Annual Tonnes Collected'].sum().reset_index())
recyclecollected['Year'].astype(int)

recycleprocessed = pd.DataFrame(df.groupby(by=['Year'])['Recycling Annual Tonnes  Processed / sorted'].sum().reset_index())
recycleprocessed['Year'].astype(int)

fig = go.Figure([
    go.Scatter( name='Collected',
        x=recyclecollected["Year"],
        y=recyclecollected["Recycling Annual Tonnes Collected"],
        mode='lines',
        marker=dict(color='blue', size=2),
        showlegend=True),
    go.Scatter( name='Processed',
        x=recycleprocessed["Year"],
        y=recycleprocessed["Recycling Annual Tonnes  Processed / sorted"],
        mode='lines',
        marker=dict(color='red', size=2),
        showlegend=True)
])
fig.update_layout(
    xaxis_title='Year',
    yaxis_title='Tons',
    title='Recycle Collected and Processed From 2001 to 2019',
    hovermode="x")
fig.show()

"""## Second Visualisation"""

wastecollected = pd.DataFrame(df.groupby(by=['Year'])['Total Annual Tonnes of Waste Collected'].sum().reset_index())
wastecollected['Year'].astype(int)
wastecollected.head()

wasteprocessed = pd.DataFrame(df.groupby(by=['Year'])['Total Annual Tonnes of Waste Processed / Sorted'].sum().reset_index())
wasteprocessed['Year'].astype(int)

fig = go.Figure([
    go.Scatter( name='Collected',
        x=wastecollected["Year"],
        y=wastecollected["Total Annual Tonnes of Waste Collected"],
        mode='lines',
        marker=dict(color='blue', size=2),
        showlegend=True),
    go.Scatter( name='Processed',
        x=wasteprocessed["Year"],
        y=wasteprocessed["Total Annual Tonnes of Waste Processed / Sorted"],
        mode='lines',
        marker=dict(color='red', size=2),
        showlegend=True)
])
fig.update_layout(
    xaxis_title='Year',
    yaxis_title='Tons',
    title='Total Waste Collected and Processed From 2001 to 2019',
    hovermode="x")
fig.show()